name: Publish Multi-Arch Docker Images

on:
  push:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and publish'
        required: true
        default: 'latest'

env:
  REGISTRY: docker.io
  IMAGE_NAME: asmogo/mintd

jobs:
  minimal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push minimal
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minimal:${{ github.event.inputs.tag || 'latest' }}
          build-args: |
            CARGO_FEATURES=sqlite
  minimal-arm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push minimal
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-minimal-arm:${{ github.event.inputs.tag || 'latest' }}
          build-args: |
            CARGO_FEATURES=sqlite
            CARGO_BUILD_TARGET=aarch64-unknown-linux-gnu

  base:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push base
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base:${{ github.event.inputs.tag || 'latest' }}
          build-args: |
            CARGO_FEATURES=sqlite,postgres,redis

  standalone:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push standalone
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-standalone:${{ github.event.inputs.tag || 'latest' }}
          build-args: |
            CARGO_FEATURES=sqlite,postgres,redis,ldk-node

  cloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push cloud
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-cloud:${{ github.event.inputs.tag || 'latest' }}
          build-args: |
            CARGO_FEATURES=sqlite,postgres,prometheus,redis,grpc,ldk-node
